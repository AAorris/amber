dm = document.getElementById('dragme')
if not dm then console.log "No dm! Oh no!" else console.log "DM! "+dm


mouse_down = (event) ->
  if event.button == 1
    console.log "middle mouse down"

drag_start = (event) ->
  style = window.getComputedStyle(event.target, null)
  data = (parseInt(style.getPropertyValue('left')) - event.clientX) + "," +(parseInt(style.getPropertyValue('top')) - event.clientY)
  event.dataTransfer.setData('text/plain', data) #@data
  return

drag_over = (event) ->
  event.preventDefault()
  false

drop = (event) ->
  #A drop event must return a string with positional data.
  data = event.dataTransfer.getData('text/plain') #@data
  offset = data.split(',')
  dm.style.left = event.clientX + parseInt(offset[0], 10) + 'px'
  dm.style.top = event.clientY + parseInt(offset[1], 10) + 'px'
  event.preventDefault()
  false

wheel = (event) ->
  console.log event.deltaX+","+event.deltaY+","+event.deltaZ

dm.addEventListener 'dragstart', drag_start, false
document.body.addEventListener 'dragover', drag_over, false
document.body.addEventListener 'drop', drop, false
document.body.addEventListener 'mousedown', mouse_down, false
document.body.addEventListener 'wheel', wheel, false

# ---
# generated by js2coffee 2.0.4

app = angular.module "amberApp", []
  .controller "amberCtrl", ($scope) ->
    $scope.position=
      x:0
      y:0
    this.test = ()->
      console.log "success."
  .directive "node", () ->
    (scope, element) ->
      el = element[0]
      el.draggable=true
      el.addEventListener 'dragstart', (e)->
        style = window.getComputerStyle(event.target, null)
        data = (parseInt(style.getPropertyValue('left')) - event.clientX) + "," +(parseInt(style.getPropertyValue('top')) - event.clientY)
        e.dataTransfer.effectAllowed='move'
        e.dataTransfer.setData 'Text', this.id
        this.classList.add 'drag'
        false
      , false
      el.addEventListener 'dragend', (e)->
        this.classList.remove 'drag'
        false
      return
